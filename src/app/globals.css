
@tailwind base;
@tailwind components;
@tailwind utilities;

/* * :root will have HSL source variables AND effective color variables (like --hologram-panel-bg)
 * set by JS (ThemeContext.tsx).
 * Composite variables like --background, --primary are defined using these HSL sources
 * in :root and within theme classes for fallback if JS fails.
 * The .holographic-panel class uses --hologram-panel-bg, which is SET BY JS on :root's inline style.
*/

@layer base {
  :root, .theme-terminal-green {
    /* HSL source variables are set by ThemeContext.tsx directly on document.documentElement.style */
    /* These act as fallbacks if JS fails or for base HTML before hydration. */
    --background-hsl: 130 20% 5%;
    --foreground-hsl: 130 80% 70%;
    --card-hsl: 130 25% 8%;
    --card-foreground-hsl: 130 80% 75%;
    --popover-hsl: 130 25% 12%;
    --popover-foreground-hsl: 130 80% 75%;
    --primary-hsl: 130 70% 45%;
    --primary-foreground-hsl: 130 80% 90%;
    --secondary-hsl: 130 30% 20%;
    --secondary-foreground-hsl: 130 70% 60%;
    --muted-hsl: 130 25% 15%;
    --muted-foreground-hsl: 130 40% 50%;
    --accent-hsl: 130 90% 55%;
    --accent-foreground-hsl: 130 20% 5%;
    --destructive-hsl: 0 70% 50%;
    --destructive-foreground-hsl: 0 0% 100%;
    --border-hsl: 130 60% 35%;
    --input-hsl: 130 30% 25%;
    --ring-hsl: 130 70% 50%;

    /* PAD specific HSL sources - set by JS on :root */
    --pad-bg-hsl: 130 25% 15%;
    --pad-border-hsl: 130 60% 45%;
    --pad-button-panel-separator-hsl: 130 50% 25%;

    /* Holographic Panel specific HSL sources - set by JS on :root */
    --hologram-panel-bg-hsl: 130 30% 15%;
    --hologram-panel-border-hsl: 130 70% 45%;
    --hologram-glow-color-hsl: 130 90% 55%;
    --hologram-button-text-hsl: 130 85% 75%; /* Brighter green for button text */

    /* Debug color (optional, can be removed by JS if not in theme) */
    --terminal-green-debug-color: lime;
  }

  .theme-cyphers {
    --background-hsl: 210 60% 8%;
    --foreground-hsl: 200 100% 90%;
    --card-hsl: 210 50% 12%;
    --card-foreground-hsl: 200 100% 90%;
    --popover-hsl: 210 50% 15%;
    --popover-foreground-hsl: 200 100% 90%;
    --primary-hsl: 204 100% 50%;
    --primary-foreground-hsl: 0 0% 100%;
    --secondary-hsl: 180 100% 35%;
    --secondary-foreground-hsl: 200 100% 90%;
    --muted-hsl: 210 50% 18%;
    --muted-foreground-hsl: 200 80% 70%;
    --accent-hsl: 0 0% 100%;
    --accent-foreground-hsl: 210 60% 8%;
    --destructive-hsl: 0 70% 50%;
    --destructive-foreground-hsl: 0 0% 100%;
    --border-hsl: 204 100% 60%;
    --input-hsl: 210 40% 15%;
    --ring-hsl: 204 100% 55%;

    --pad-bg-hsl: 210 50% 18%;
    --pad-border-hsl: 204 100% 70%;
    --pad-button-panel-separator-hsl: 204 100% 40%;

    --hologram-panel-bg-hsl: 210 50% 15%;
    --hologram-panel-border-hsl: 204 100% 50%;
    --hologram-glow-color-hsl: 204 100% 50%;
    --hologram-button-text-hsl: 0 0% 100%;
    --cyphers-debug-color: blue;
  }

  .theme-shadows {
    --background-hsl: 0 60% 8%;
    --foreground-hsl: 0 0% 90%;
    --card-hsl: 0 50% 12%;
    --card-foreground-hsl: 0 0% 90%;
    --popover-hsl: 0 50% 15%;
    --popover-foreground-hsl: 0 0% 90%;
    --primary-hsl: 0 100% 40%;
    --primary-foreground-hsl: 0 0% 100%;
    --secondary-hsl: 16 100% 71%;
    --secondary-foreground-hsl: 0 0% 90%;
    --muted-hsl: 0 50% 18%;
    --muted-foreground-hsl: 0 0% 70%;
    --accent-hsl: 0 0% 100%;
    --accent-foreground-hsl: 0 60% 8%;
    --destructive-hsl: 0 70% 50%;
    --destructive-foreground-hsl: 0 0% 100%;
    --border-hsl: 0 100% 50%;
    --input-hsl: 0 40% 15%;
    --ring-hsl: 0 100% 55%;

    --pad-bg-hsl: 0 50% 18%;
    --pad-border-hsl: 0 100% 60%;
    --pad-button-panel-separator-hsl: 0 100% 25%;

    --hologram-panel-bg-hsl: 0 50% 15%;
    --hologram-panel-border-hsl: 0 100% 40%;
    --hologram-glow-color-hsl: 0 100% 40%;
    --hologram-button-text-hsl: 0 0% 100%;
    --shadows-debug-color: red;
  }

  .theme-neutral {
    --background-hsl: 220 10% 10%;
    --foreground-hsl: 220 10% 70%;
    --card-hsl: 220 15% 12%;
    --card-foreground-hsl: 220 10% 75%;
    --popover-hsl: 220 15% 15%;
    --popover-foreground-hsl: 220 10% 75%;
    --primary-hsl: 180 70% 50%;
    --primary-foreground-hsl: 220 10% 95%;
    --secondary-hsl: 220 20% 20%;
    --secondary-foreground-hsl: 220 10% 60%;
    --muted-hsl: 220 15% 25%;
    --muted-foreground-hsl: 220 10% 55%;
    --accent-hsl: 180 70% 60%;
    --accent-foreground-hsl: 220 10% 10%;
    --destructive-hsl: 0 70% 50%;
    --destructive-foreground-hsl: 0 0% 100%;
    --border-hsl: 220 20% 30%;
    --input-hsl: 220 20% 25%;
    --ring-hsl: 180 70% 55%;

    --pad-bg-hsl: 220 15% 18%;
    --pad-border-hsl: 220 20% 35%;
    --pad-button-panel-separator-hsl: 220 20% 25%;

    --hologram-panel-bg-hsl: 220 15% 18%;
    --hologram-panel-border-hsl: 180 70% 50%;
    --hologram-glow-color-hsl: 180 70% 60%;
    --hologram-button-text-hsl: 220 10% 95%;
    --neutral-debug-color: gray;
  }

  :root {
    /* Layout Variables */
    --header-height: 60px;
    --header-height-scrolled: 48px;
    --sub-header-height: 46px;
    --level-bar-height: 38px;
    --bottom-nav-height: 88px;

    /* Core Theme Colors - Resolved from HSL vars set by JS on :root's inline style */
    --background: hsl(var(--background-hsl));
    --foreground: hsl(var(--foreground-hsl));
    --card: hsl(var(--card-hsl));
    --card-foreground: hsl(var(--card-foreground-hsl));
    --popover: hsl(var(--popover-hsl));
    --popover-foreground: hsl(var(--popover-foreground-hsl));
    --primary: hsl(var(--primary-hsl));
    --primary-foreground: hsl(var(--primary-foreground-hsl));
    --secondary: hsl(var(--secondary-hsl));
    --secondary-foreground: hsl(var(--secondary-foreground-hsl));
    --muted: hsl(var(--muted-hsl));
    --muted-foreground: hsl(var(--muted-foreground-hsl));
    --accent: hsl(var(--accent-hsl));
    --accent-foreground: hsl(var(--accent-foreground-hsl));
    --destructive: hsl(var(--destructive-hsl));
    --destructive-foreground: hsl(var(--destructive-foreground-hsl));
    --border: hsl(var(--border-hsl));
    --input: hsl(var(--input-hsl));
    --ring: hsl(var(--ring-hsl));

    /* Item Level Colors HSL (globally available for item rarity etc.) */
    --level-1-color-hsl: 220 10% 40%;  /* Grey (Cool Grey/Blueish) */
    --level-2-color-hsl: 120 60% 45%;  /* Green */
    --level-3-color-hsl: 55 100% 50%;  /* Yellow */
    --level-3-text-color-hsl: 0 0% 0%; /* Black text for yellow bg */
    --level-4-color-hsl: 30 100% 50%;  /* Orange */
    --level-5-color-hsl: 270 60% 55%;  /* Purple */
    --level-6-color-hsl: 0 100% 50%;   /* Red */
    --level-7-color-hsl: 180 100% 50%; /* Cyan */
    --level-8-color-hsl: 300 100% 50%; /* Magenta */

    --level-1-color: hsl(var(--level-1-color-hsl));
    --level-2-color: hsl(var(--level-2-color-hsl));
    --level-3-color: hsl(var(--level-3-color-hsl));
    --level-3-text-color: hsl(var(--level-3-text-color-hsl));
    --level-4-color: hsl(var(--level-4-color-hsl));
    --level-5-color: hsl(var(--level-5-color-hsl));
    --level-6-color: hsl(var(--level-6-color-hsl));
    --level-7-color: hsl(var(--level-7-color-hsl));
    --level-8-color: hsl(var(--level-8-color-hsl));

    /* Chart colors */
    --chart-1: hsl(var(--primary-hsl));
    --chart-2: hsl(var(--primary-hsl) / 0.7);
    --chart-3: hsl(var(--primary-hsl) / 0.5);
    --chart-4: hsl(var(--primary-hsl) / 0.3);
    --chart-5: hsl(var(--primary-hsl) / 0.1);

    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  html {
    @apply overflow-hidden;
  }
  body {
    @apply bg-background text-foreground font-exo2 overflow-hidden;
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }

  #__next {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    overflow: hidden;
  }

  main {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-orbitron;
  }
}
/* Custom holographic styles */
.holographic-panel {
  /*background: none;*/
  border-color: var(--hologram-panel-border); /* Uses var set by JS on :root */
  border-width: 1px;
  border-style: solid;
  border-radius: 0.5rem;
  box-shadow: 0 0 15px var(--hologram-glow-color), inset 0 0 10px var(--hologram-glow-color); /* Uses var set by JS on :root */
  @apply p-4 md:p-6;
}
.holographic-text {
  color: hsl(var(--foreground-hsl));
  text-shadow: 0 0 5px var(--hologram-glow-color), 0 0 10px var(--hologram-glow-color);
}

.holographic-button {
  border-color: var(--hologram-panel-border);
  color: var(--hologram-button-text) !important;
  @apply bg-transparent border rounded-md px-4 py-2 transition-all duration-300;
  box-shadow: 0 0 8px var(--hologram-panel-border), inset 0 0 5px var(--hologram-panel-border);
}
.holographic-button:hover {
  background-color: var(--hologram-panel-border);
  color: hsl(var(--background-hsl)) !important;
  box-shadow: 0 0 15px var(--hologram-panel-border), 0 0 25px var(--hologram-panel-border);
}
.holographic-button:disabled {
  @apply opacity-50 cursor-not-allowed;
  box-shadow: none;
}

.holographic-input {
  @apply bg-transparent border border-input text-foreground rounded-md px-3 py-2;
  box-shadow: inset 0 0 5px hsl(var(--input-hsl));
}
.holographic-input:focus {
   @apply ring-2 ring-ring border-ring;
   box-shadow: inset 0 0 8px hsl(var(--ring-hsl)), 0 0 8px hsl(var(--ring-hsl));
}

.font-rajdhani {
  font-family: var(--font-rajdhani);
}

.font-digital7 {
  font-family: var(--font-geist-mono), monospace;
  letter-spacing: 0.1em;
  font-variant-numeric: tabular-nums;
}

.pad-screen-grid {
  background-image:
    repeating-linear-gradient(0deg, hsl(var(--foreground-hsl) / 0.2) 0px 1px, transparent 1px 20px),
    repeating-linear-gradient(90deg, hsl(var(--foreground-hsl) / 0.2) 0px 1px, transparent 1px 20px);
}

.icon-glow {
  filter: drop-shadow(0 0 3px var(--hologram-glow-color));
}

.network-tap-light {
  @apply w-3 h-3 rounded-full;
  box-shadow: 0 0 8px currentColor, inset 0 0 4px currentColor;
}
.network-tap-light.green {
  @apply bg-green-500 text-green-400;
}
.network-tap-light.red {
  @apply bg-red-500 text-red-400;
}
.network-tap-light.flashing {
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.tod-scroll-container {
  display: flex;
  height: 100vh;
  overflow-x: auto;
  overflow-y: hidden;
}

.tod-section {
  @apply flex-shrink-0 h-full relative;
  width: 100vw;
}

.parallax-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  will-change: transform;
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}
.scrollbar-hide {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

@keyframes gloss-sweep {
  0% {
    left: -150%;
  }
  100% {
    left: 150%; /* Sweeps across and off-screen to the right */
  }
}

/* Cleaned up PAD gloss effect */
.pad-gloss-effect {
  position: relative;
  overflow: hidden; /* Important to clip the pseudo-element */
}

/* Animated Sweeping Gloss */
.pad-gloss-effect::after { /* Changed from ::before to ::after to match previous good state */
  content: "";
  position: absolute;
  top: 0;
  left: -150%; /* Start off-screen to the left */
  width: 75%;  /* Width of the sheen */
  height: 100%;
  background: linear-gradient(
    to right, /* Changed angle for better visual */
    hsla(0,0%,100%,0) 0%,
    hsla(0,0%,100%,0.05) 50%, /* Faint white center */
    hsla(0,0%,100%,0) 100%
  );
  transform: skewX(-25deg); /* Optional: adds a slanted look to the sheen */
  animation: gloss-sweep 7s infinite linear; /* Animation properties */
  z-index: 1;
  pointer-events: none; /* Allows clicks to pass through */
  border-radius: inherit; /* ensure gloss respects parent's border-radius */
}

/* Static Top Border Gloss */
.pad-gloss-effect::before { /* Changed from ::before to ::after to match previous good state */
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 8px; /* Adjust height for the desired thickness of the top gloss */
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0) 100%);
  pointer-events: none;
  z-index: 2; /* Above the animated sweeping gloss */
}


@keyframes slide-up-from-bottom {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
.animate-slide-up-from-bottom {
  animation: slide-up-from-bottom 1s ease-out forwards;
}

@keyframes slide-in-right-tod {
  from { transform: translateX(100%) scale(0.95); } /* Just slide in */
  to { transform: translateX(0) scale(1); }
}
@keyframes slide-out-right-tod {
  from { transform: translateX(0) scale(1); } /* Just slide out */
  to { transform: translateX(100%) scale(0.95); }
}

.animate-slide-in-right-tod {
  animation: slide-in-right-tod 0.3s ease-out forwards;
}
.animate-slide-out-right-tod {
  animation: slide-out-right-tod 0.3s ease-out forwards;
}

/* CSS Background Animations */
@keyframes parallaxScroll {
  0% {
    background-position-x: 0px; /* Start at 0px */
  }
  100% {
    background-position-x: -2000px; /* Animate to a large negative pixel value */
  }
}

.parallax-background {
  animation: parallaxScroll 240s linear infinite;
}

@keyframes scannerScroll {
  0% {
    background-position-x: 0px; /* Start at 0px */
  }
  100% {
    background-position-x: -2000px; /* Animate to a large negative pixel value */
  }
}

.scanner-background {
  /* Wallpaper image properties are NOT defined here, as they are in ScannerSection.tsx inline style */
  animation: scannerScroll 300s linear infinite;
}

@layer components {
  /* Base for scanner background elements - .map-overlay.holographic-panel needs position: relative */
  .map-overlay.holographic-panel {
    position: relative;
  }

  /* Specific theme backgrounds - only map image and darkening layer FOR THE PANEL ITSELF */
  .map-overlay.holographic-panel.observer-background {
    background-image:
      linear-gradient(rgba(0,0,0,0.2), rgba(0,0,0,0.2)), /* Darkening overlay */
      url('/backgrounds/World Map Green.jpg'); /* Map image */
    background-size: cover, auto 102%; /* Darkening layer covers, map image scales */
    background-repeat: no-repeat, repeat-x; /* Darkening layer no-repeat, map repeats horizontally */
    background-position: 0 0, 0 0; /* JS will animate the second position (map) */
    transform: translateZ(0);
  }

  .map-overlay.holographic-panel.cyphers-background {
    background-image:
      linear-gradient(rgba(0,0,0,0.2), rgba(0,0,0,0.2)),
      url('/backgrounds/World Map Blue.jpg');
    background-size: cover, auto 102%;
    background-repeat: no-repeat, repeat-x;
    background-position: 0 0, 0 0;
    transform: translateZ(0);
  }

  .map-overlay.holographic-panel.shadows-background {
    background-image:
      linear-gradient(rgba(0,0,0,0.2), rgba(0,0,0,0.2)),
      url('/backgrounds/World Map Red.jpg');
    background-size: cover, auto 102%;
    background-repeat: no-repeat, repeat-x;
    background-position: 0 0, 0 0;
    transform: translateZ(0);
  }

  /* New class for static grid lines overlay with controlled opacity */
  .scanner-grid-lines {
    position: absolute;
    inset: 0;
    background-image:
      repeating-linear-gradient(0deg, hsl(var(--foreground-hsl) / 0.2) 0px, hsl(var(--foreground-hsl) / 0.2) 1px, transparent 1px, transparent 20px),
      repeating-linear-gradient(90deg, hsl(var(--foreground-hsl) / 0.2) 0px, hsl(var(--foreground-hsl) / 0.2) 1px, transparent 1px, transparent 20px);
    background-size: 20px 20px;
    background-position: 0px 0px; /* Solid grid, no offset for dots */
    z-index: 3; /* Ensure it's above the gloss effect */
    pointer-events: none;
    border-radius: inherit; /* Respect parent panel's border-radius */
  }

}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes pulse-grid {
  0% { opacity: 0.02; }
  50% { opacity: 0.1; }
  100% { opacity: 0.02; }
}

@keyframes fadeInOut {
  0% { opacity: 0; }
  25% { opacity: 1; }
  75% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes floatOne {
  0% { transform: translateY(0) translateX(0); }
  25% { transform: translateY(-10px) translateX(5px); }
  50% { transform: translateY(0) translateX(0); }
  75% { transform: translateY(10px) translateX(-5px); }
  100% { transform: translateY(0) translateX(0); }
}

@keyframes floatTwo {
  0% { transform: translateY(0) translateX(0); }
  25% { transform: translateY(10px) translateX(-5px); }
  50% { transform: translateY(0) translateX(0); }
  75% { transform: translateY(-10px) translateX(5px); }
  100% { transform: translateY(0) translateX(0); }
}
