
@tailwind base;
@tailwind components;
@tailwind utilities;

/* 
  :root will have HSL source variables set by JS.
  Then, composite variables like --background, --primary are defined using these HSL sources.
  The .holographic-panel class uses --hologram-panel-bg, which is ALSO set by JS on :root's inline style.
*/

@layer base {
  :root, .theme-terminal-green { /* Default theme values if no JS or specific theme class */
    /* HSL source variables are set by ThemeContext.tsx directly on document.documentElement.style */
    /* These are effectively fallbacks if JS fails or for base HTML before hydration. */
    --background-hsl: 130 20% 5%;
    --foreground-hsl: 130 80% 70%;
    --card-hsl: 130 25% 8%;
    --card-foreground-hsl: 130 80% 75%;
    --popover-hsl: 130 25% 12%;
    --popover-foreground-hsl: 130 80% 75%;
    --primary-hsl: 130 70% 45%;
    --primary-foreground-hsl: 130 80% 90%;
    --secondary-hsl: 130 30% 20%;
    --secondary-foreground-hsl: 130 70% 60%;
    --muted-hsl: 130 25% 15%;
    --muted-foreground-hsl: 130 40% 50%;
    --accent-hsl: 130 90% 55%;
    --accent-foreground-hsl: 130 20% 5%;
    --destructive-hsl: 0 70% 50%;
    --destructive-foreground-hsl: 0 0% 100%;
    --border-hsl: 130 60% 35%;
    --input-hsl: 130 30% 25%;
    --ring-hsl: 130 70% 50%;
    
    /* Specific variables set by JS on :root's inline style */
    /* --pad-effective-background-color: hsla(var(--pad-bg-hsl, 130 25% 15%), 0.85); */ /* Example fallback */
    /* --pad-effective-border-color: hsl(var(--pad-border-hsl, 130 60% 45%)); */
    /* --pad-effective-button-panel-separator-color: hsla(var(--pad-button-panel-separator-hsl, 130 50% 25%), 0.5); */
    /* --hologram-panel-bg: hsla(var(--hologram-panel-bg-hsl, 130 30% 15%), 0.7); */
    /* --hologram-panel-border: hsl(var(--hologram-panel-border-hsl, var(--primary-hsl))); */
    /* --hologram-glow-color: hsl(var(--hologram-glow-color-hsl, var(--accent-hsl))); */
    /* --hologram-button-text: hsl(var(--hologram-button-text-hsl, var(--primary-foreground-hsl))); */
  }

  /* Theme classes just act as selectors for JS to pick up the HSL values from themeHSLValues map */
  /* Actual HSL values are applied via inline styles on :root by ThemeContext.tsx */
  .theme-cyphers { /* Marker class */ }
  .theme-shadows { /* Marker class */ }
  .theme-neutral { /* Marker class */ }

 :root {
    /* Core Theme Colors - Resolved from HSL vars set by JS on :root's inline style */
    --background: hsl(var(--background-hsl)); 
    --foreground: hsl(var(--foreground-hsl));
    --card: hsl(var(--card-hsl));
    --card-foreground: hsl(var(--card-foreground-hsl));
    --popover: hsl(var(--popover-hsl));
    --popover-foreground: hsl(var(--popover-foreground-hsl));
    --primary: hsl(var(--primary-hsl));
    --primary-foreground: hsl(var(--primary-foreground-hsl));
    --secondary: hsl(var(--secondary-hsl));
    --secondary-foreground: hsl(var(--secondary-foreground-hsl));
    --muted: hsl(var(--muted-hsl));
    --muted-foreground: hsl(var(--muted-foreground-hsl));
    --accent: hsl(var(--accent-hsl));
    --accent-foreground: hsl(var(--accent-foreground-hsl));
    --destructive: hsl(var(--destructive-hsl));
    --destructive-foreground: hsl(var(--destructive-foreground-hsl));
    --border: hsl(var(--border-hsl));
    --input: hsl(var(--input-hsl));
    --ring: hsl(var(--ring-hsl));
    
    /* Holographic Panel variables below are set by JS on :root's inline style to their FINAL hsla/hsl values */
    /* --hologram-panel-bg: hsla(var(--hologram-panel-bg-hsl), 0.7); /* This is set by JS */
    /* --hologram-panel-border: hsl(var(--hologram-panel-border-hsl)); /* This is set by JS */
    /* --hologram-glow-color: hsl(var(--hologram-glow-color-hsl)); /* This is set by JS */
    /* --hologram-button-text: hsl(var(--hologram-button-text-hsl)); /* This is set by JS */
    /* --pad-effective-background-color, etc. are also set directly by JS */


    /* Item Level Colors HSL (globally available for item rarity etc.) */
    --level-1-color-hsl: 0 100% 50%;
    --level-2-color-hsl: 30 100% 50%;
    --level-3-color-hsl: 50 100% 50%;
    --level-3-text-color-hsl: 0 0% 0%;
    --level-4-color-hsl: 120 70% 40%;
    --level-5-color-hsl: 220 100% 50%;
    --level-6-color-hsl: 260 100% 55%;
    --level-7-color-hsl: 280 100% 55%;
    --level-8-color-hsl: 320 100% 50%;

    --level-1-color: hsl(var(--level-1-color-hsl));
    --level-2-color: hsl(var(--level-2-color-hsl));
    --level-3-color: hsl(var(--level-3-color-hsl));
    --level-3-text-color: hsl(var(--level-3-text-color-hsl));
    --level-4-color: hsl(var(--level-4-color-hsl));
    --level-5-color: hsl(var(--level-5-color-hsl));
    --level-6-color: hsl(var(--level-6-color-hsl));
    --level-7-color: hsl(var(--level-7-color-hsl));
    --level-8-color: hsl(var(--level-8-color-hsl));

    /* Chart colors */
    --chart-1: hsl(var(--primary-hsl));
    --chart-2: hsl(var(--primary-hsl) / 0.7);
    --chart-3: hsl(var(--primary-hsl) / 0.5);
    --chart-4: hsl(var(--primary-hsl) / 0.3);
    --chart-5: hsl(var(--primary-hsl) / 0.1);

    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  html {
    @apply overflow-hidden;
  }
  body {
    @apply bg-background text-foreground font-exo2 overflow-hidden;
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }

  #__next {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    overflow: hidden; 
  }

  main {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-orbitron;
  }
}

/* Custom holographic styles */
.holographic-panel {
  background-color: var(--hologram-panel-bg); /* Uses var set by JS on :root for themed translucent bg */
  border-color: var(--hologram-panel-border); 
  border-width: 1px;
  border-style: solid;
  border-radius: 0.5rem; 
  box-shadow: 0 0 15px var(--hologram-glow-color), inset 0 0 10px var(--hologram-glow-color); /* Glow uses var set by JS */
  @apply p-4 md:p-6;
}

.holographic-text {
  color: hsl(var(--foreground-hsl)); /* Uses foreground from current theme context */
  text-shadow: 0 0 5px var(--hologram-glow-color), 0 0 10px var(--hologram-glow-color); /* Glow uses var set by JS */
}

.holographic-button {
  border-color: var(--hologram-button-bg, hsl(var(--primary-hsl)) ); /* Uses var set by JS, or default primary */
  color: var(--hologram-button-text) !important; /* Uses var set by JS */
  @apply bg-transparent border rounded-md px-4 py-2 transition-all duration-300;
  box-shadow: 0 0 8px var(--hologram-button-bg, hsl(var(--primary-hsl))), inset 0 0 5px var(--hologram-button-bg, hsl(var(--primary-hsl)));
}
.holographic-button:hover {
  background-color: var(--hologram-button-bg, hsl(var(--primary-hsl)));
  color: hsl(var(--background-hsl)) !important; /* Text color on hover relative to main background */
  box-shadow: 0 0 15px var(--hologram-button-bg, hsl(var(--primary-hsl))), 0 0 25px var(--hologram-button-bg, hsl(var(--primary-hsl)));
}
.holographic-button:disabled {
  @apply opacity-50 cursor-not-allowed;
  box-shadow: none;
}

.active-pad-button {
  background-color: hsl(var(--primary-hsl) / 0.3) !important;
  border-color: hsl(var(--primary-hsl)) !important;
  box-shadow: 0 0 10px hsl(var(--primary-hsl)), inset 0 0 8px hsl(var(--primary-hsl)) !important;
}

.holographic-input {
  @apply bg-transparent border border-input text-foreground rounded-md px-3 py-2;
  box-shadow: inset 0 0 5px hsl(var(--input-hsl));
}
.holographic-input:focus {
   @apply ring-2 ring-ring border-ring;
   box-shadow: inset 0 0 8px hsl(var(--ring-hsl)), 0 0 8px hsl(var(--ring-hsl));
}

.font-rajdhani {
  font-family: var(--font-rajdhani);
}

.font-digital7 {
  font-family: var(--font-geist-mono), monospace;
  letter-spacing: 0.1em;
  font-variant-numeric: tabular-nums;
}

.pad-screen-grid {
  background-image:
    repeating-linear-gradient(0deg, hsl(var(--foreground-hsl) / 0.1) 0px 1px, transparent 1px 20px),
    repeating-linear-gradient(90deg, hsl(var(--foreground-hsl) / 0.1) 0px 1px, transparent 1px 20px);
}

.icon-glow {
  filter: drop-shadow(0 0 3px var(--hologram-glow-color)); /* Glow uses var set by JS */
}

.network-tap-light {
  @apply w-3 h-3 rounded-full;
  box-shadow: 0 0 8px currentColor, inset 0 0 4px currentColor;
}
.network-tap-light.green {
  @apply bg-green-500 text-green-400;
}
.network-tap-light.red {
  @apply bg-red-500 text-red-400;
}
.network-tap-light.flashing {
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.tod-scroll-container {
  display: flex;
  height: 100vh; 
  overflow-x: auto; 
  overflow-y: hidden; 
}

.tod-section {
  @apply flex-shrink-0 h-full relative;
  width: 100vw;
}

.parallax-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  will-change: transform;
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}
.scrollbar-hide {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

@keyframes slide-up-from-bottom {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
.animate-slide-up-from-bottom {
  animation: slide-up-from-bottom 1s ease-out forwards;
}

@keyframes slide-in-right-tod {
  from { transform: translateX(100%) scale(0.95); opacity: 0; }
  to { transform: translateX(0) scale(1); opacity: 1; }
}
@keyframes slide-out-right-tod {
  from { transform: translateX(0) scale(1); opacity: 1; }
  to { transform: translateX(100%) scale(0.95); opacity: 0; }
}

.animate-slide-in-right-tod {
  animation: slide-in-right-tod 0.3s ease-out forwards;
}
.animate-slide-out-right-tod {
  animation: slide-out-right-tod 0.3s ease-out forwards;
}

.map-overlay::before {
  content: '';
  position: absolute;
  inset: 0; 
  background-color: rgba(0, 0, 0, 0.2); 
  z-index: 5; 
  pointer-events: none; 
  border-radius: inherit; 
}
